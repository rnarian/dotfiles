[core]
  excludesfile = ~/.gitignore
  editor = code -w
  trustctime = false
  eol = lf
  autocrlf = input
  quotepath = false

[color]
  ui = true
  branch = auto
  diff = auto
  interactive = auto
  status = auto

[format]
  pretty = oneline

[user]
  name = Marian Friedmann
  email = marian.friedmann@gmail.com

[merge]
  log = true
  tool = sublime

[push]
  default = matching

[difftool]
  prompt = false
  tool = vimdiff

[fetch]
  prune = true

[help]
  autocorrect = 1

[mergetool]
  prompt = false

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[alias]
  # Pretty logs
        l = log --pretty=oneline -n 40 --graph
        ll = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  a = add
  co = commit -m
  m = merge --no-ff
  # cmd + c, cmd + v from https://github.com/mathiasbynens/dotfiles
  # View the current working tree status using the short format
  s = status -sb
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a -v
  remotes = remote -v
  # Undo a git push
  undopush = push -f origin HEAD^:master
  oops = commit --amend
  d = diff -- . ':(exclude)package-lock.json'
  pu = !"git fetch origin -v; git fetch upstream -v; git merge upstream/master"
  hub = !"open $(git config --get remote.origin.url | sed 's/git@//g' | sed 's/github.com:/http:\\/\\/github.com\\//g' | sed 's/pushpull.space:/https:\\/\\/pushpull.space\\//g')"
  cleanup = "!f() { git branch --merged | grep -v '*' | xargs -n 1 git branch -d; }; f"
  changes-local = !git for-each-ref --sort='-committerdate:iso8601' --format=' %(authordate:relative)%09%(refname:short)' refs/heads
  changes-remote = !git for-each-ref --sort='-committerdate:iso8601' --format=' %(authordate:relative)%09%(refname:short)' refs/remotes

[mergetool "sublime"]
  cmd = subl -w $MERGED
  trustExitCode = false

[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true

[github]
  user = rnarian
